# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #AppBundle\:
    #    resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
    #    exclude: '../../src/AppBundle/{Entity,Benchmark,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    console_reporter:
        class: AppBundle\Benchmark\Reporter\Console
        arguments:
            - '@logger'
            - '@benchmark'
        tags:
            - { name: monolog.logger, channel: benchmark }
    email_reporter:
        class: AppBundle\Benchmark\Reporter\Email
        arguments:
            - ['recipient@number-one.com', 'recipient@number-two.com']
            - 'from@sender.address'
            - '@mailer'
            - '@templating'
            - 'report/email.txt.twig'
    sms_reporter: # dummy SMS reporter
        class: AppBundle\Benchmark\Reporter\Sms
    email_condition:
        class: AppBundle\Benchmark\ReportingCondition\RelativelyGreater
    sms_condition:
        class: AppBundle\Benchmark\ReportingCondition\RelativelyGreater
        arguments:
            - 100
    conditional_email_reporter:
        class: AppBundle\Benchmark\Reporter\Conditional
        arguments:
            - '@email_condition'
            - '@email_reporter'
    conditional_sms_reporter:
        class: AppBundle\Benchmark\Reporter\Conditional
        arguments:
            - '@sms_condition'
            - '@sms_reporter'
    # add more services, or override services that need manual wiring
    website_timer:
        class: AppBundle\Benchmark\WebsiteResultProvider\Timer
    benchmark_provider_timer:
        class: AppBundle\Benchmark\Provider
        arguments: ['Response time', '@website_timer']
    benchmark:
        class: "AppBundle\\Service\\Benchmark"
        arguments: [ '@validator', '@benchmark_provider_timer' ]
        calls:
            - method: addReporter
              arguments:
                  - '@console_reporter'
            - method: addReporter
              arguments:
                  - '@conditional_email_reporter'
            - method: addReporter
              arguments:
                  - '@conditional_sms_reporter'
    AppBundle\Command\AppBenchmarkCommand:
        class: AppBundle\Command\AppBenchmarkCommand
        arguments:
            - '@logger'
            - '@benchmark'
        tags:
            - { name: monolog.logger, channel: benchmark }
            - { name: console.command }

    benchmark_formatter:
        public: true
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] %%level_name%%: %%message%%\n"
            - ~
            - false
            - true
    benchmark_formatter_console:
        public: true
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "%%message%%\n"
            - ~
            - false
            - true
