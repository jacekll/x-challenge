# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #AppBundle\:
    #    resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
    #    exclude: '../../src/AppBundle/{Entity,Benchmark,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    #AppBundle\Controller\:
    #    resource: '../../src/AppBundle/Controller'
    #    public: true
    #    tags: ['controller.service_arguments']

    table_formatter:
        class: AppBundle\Table\Formatter\TabSeparated
        arguments:
            - '@logger'
        tags:
            - { name: monolog.logger, channel: benchmark }

    comparator:
        class: AppBundle\Benchmark\ValueComparator\Percentage

    console_reporter:
        class: AppBundle\Benchmark\Reporter\Console
        arguments:
            - '@table_formatter'
            - '@comparator'
        tags:
            - { name: kernel.event_subscriber }
    email_reporter:
        class: AppBundle\Benchmark\Reporter\Email
        arguments:
            - ['recipient@number-one.com', 'recipient@number-two.com']
            - 'from@sender.address'
            - '@mailer'
            - '@templating'
            - 'report/email.txt.twig'
    sms_reporter: # SMS reporter
        class: AppBundle\Benchmark\Reporter\Sms
        arguments:
            - '@kch_sms_api.sms_factory.default'
            - '@templating'
            - 'report/sms.txt.twig'
            - 'Jacek L for XSolve' # sender name
            - '502536598' # destination address
    email_condition:
        class: AppBundle\Benchmark\ReportingCondition\RelativelyGreater
    sms_condition:
        class: AppBundle\Benchmark\ReportingCondition\RelativelyGreater
        arguments:
            - 100 # percent; greater by 100% or more means value twice as big or bigger

    # configure more conditional reporters if needed
    conditional_email_reporter:
        class: AppBundle\Benchmark\Reporter\Conditional
        arguments:
            - '@email_condition'
            - '@email_reporter'
    conditional_sms_reporter:
        class: AppBundle\Benchmark\Reporter\Conditional
        arguments:
            - '@sms_condition'
            - '@sms_reporter'
            # - add a custom ConditionVerifier implementation here, as third argument, when needed
    # add more services, or override services that need manual wiring
    #
    page_load_timer:
        class: AppBundle\Benchmark\PageLoadTimer
    website_timer:
        class: AppBundle\Benchmark\WebsiteResultProvider\Timer
        arguments:
            ['@page_load_timer']
    benchmark_provider_timer:
        class: AppBundle\Benchmark\Provider
        arguments: ['@website_timer']
    # sample additional benchmark provider
    # pass any AppBundle\Benchmark\WebsiteResultProvider implementation to include custom data
    benchmark_provider_timer2:
            class: AppBundle\Benchmark\Provider
            arguments:
                - '@website_timer'
                - 'Page load time (revisit)' # optionally override the default benchmark name with another human-readable name
    benchmark_processor_timer:
        class: AppBundle\Benchmark\Processor
        arguments: ['@benchmark_provider_timer', '@logger']
        calls:
            # reporter configuration, separately for each "sub-benchmark"
            - method: addReporter
              arguments:
                  - '@console_reporter'
            - method: addReporter
              arguments:
                  - '@conditional_email_reporter'
            - method: addReporter
              arguments:
                  - '@conditional_sms_reporter'
    # sample second sub-benchmark - use a provider configured with custom WebsiteResultProvider implementation
    # to include custom data in the report
    benchmark_processor_timer2:
        class: AppBundle\Benchmark\Processor
        arguments: ['@benchmark_provider_timer2', '@logger']
        calls:
            # reporter configuration for this particular sub-benchmark - for example only console reporting configured here
            - method: addReporter
              arguments:
                  - '@console_reporter'
    # main benchmark service condiguration
    benchmark:
        class: AppBundle\Service\Benchmark
        arguments: [ '@validator', '@logger' ]
        calls:
            # more processors can be added to include different sub-benchmark data in the benchmark
            # (see sample benchmark_processor_timer2 service for example config.)
            # each processor can be configured with
            #  - a benchmark data provider to include more data in the report
            #  - reporters to react to the data
            - method: addProcessor
              arguments:
                  - '@benchmark_processor_timer'
            - method: addProcessor
              arguments:
                  - '@benchmark_processor_timer2'

    AppBundle\Command\AppBenchmarkCommand:
        class: AppBundle\Command\AppBenchmarkCommand
        arguments:
            - '@logger'
            - '@benchmark'
        tags:
            - { name: monolog.logger, channel: benchmark }
            - { name: console.command }

    # console and file output configuration for benchmark
    benchmark_formatter_console:
        public: true
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "%%message%%\n"
            - ~
            - false
            - true
